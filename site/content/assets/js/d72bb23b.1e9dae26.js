"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[919],{7177:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>r,contentTitle:()=>l,default:()=>m,frontMatter:()=>i,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"configuration/multiple-databases","title":"Multiple Databases","description":"The exporter may be configured to scrape as many databases as needed.","source":"@site/docs/configuration/multiple-databases.md","sourceDirName":"configuration","slug":"/configuration/multiple-databases","permalink":"/oracle-db-appdev-monitoring/docs/configuration/multiple-databases","draft":false,"unlisted":false,"editUrl":"https://github.com/oracle/oracle-db-appdev-monitoring/tree/main/site/docs/configuration/multiple-databases.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"title":"Multiple Databases","sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"Custom Metrics","permalink":"/oracle-db-appdev-monitoring/docs/configuration/custom-metrics"},"next":{"title":"Oracle Wallet (mTLS)","permalink":"/oracle-db-appdev-monitoring/docs/configuration/oracle-wallet"}}');var o=a(4848),s=a(8453);const i={title:"Multiple Databases",sidebar_position:3},l="Scraping Multiple Databases",r={},c=[{value:"Only scraping metrics from specific databases",id:"only-scraping-metrics-from-specific-databases",level:3}];function d(e){const n={a:"a",code:"code",h1:"h1",h3:"h3",header:"header",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"scraping-multiple-databases",children:"Scraping Multiple Databases"})}),"\n",(0,o.jsx)(n.p,{children:"The exporter may be configured to scrape as many databases as needed."}),"\n",(0,o.jsx)(n.p,{children:"You may scrape as many databases as needed by defining named database configurations in the config file."}),"\n",(0,o.jsxs)(n.p,{children:["If you're connecting to multiple databases using mTLS, see ",(0,o.jsx)(n.a,{href:"/oracle-db-appdev-monitoring/docs/configuration/oracle-wallet#mtls-for-multiple-databases-with-oracle-wallet",children:"mTLS for multiple databases with Oracle Wallet"})]}),"\n",(0,o.jsx)(n.p,{children:'The following settings configure the exporter to scrape multiple databases, "db1", and "db2", simultaneously:'}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"# Example Oracle Database Metrics Exporter Configuration file.\n# Environment variables of the form ${VAR_NAME} will be expanded.\n\ndatabases:\n  ## Path on which metrics will be served\n  # metricsPath: /metrics\n\n  ## As many named database configurations may be defined as needed.\n  ## It is recommended to define your database config in the config file, rather than using CLI arguments.\n\n  ## Database connection information for the \"db1\" database.\n  db1:\n    ## Database username\n    username: ${DB1_USERNAME}\n    ## Database password\n    password: ${DB1_PASSWORD}\n    ## Database connection url\n    url: localhost:1521/freepdb1\n\n    ## Metrics query timeout for this database, in seconds\n    queryTimeout: 5\n\n    ## Rely on Oracle Database External Authentication by network or OS\n    # externalAuth: false\n    ## Database role\n    # role: SYSDBA\n    ## Path to Oracle Database wallet, if using wallet\n    # tnsAdmin: /path/to/database/wallet\n\n    ### Connection settings:\n    ### Either the go-sql or Oracle Database connection pool may be used.\n    ### To use the Oracle Database connection pool over the go-sql connection pool,\n    ### set maxIdleConns to zero and configure the pool* settings.\n\n    ### Connection pooling settings for the go-sql connection pool\n    ## Max open connections for this database using go-sql connection pool\n    maxOpenConns: 10\n    ## Max idle connections for this database using go-sql connection pool\n    maxIdleConns: 10\n\n    ### Connection pooling settings for the Oracle Database connection pool\n    ## Oracle Database connection pool increment.\n    # poolIncrement: 1\n    ## Oracle Database Connection pool maximum size\n    # poolMaxConnections: 15\n    ## Oracle Database Connection pool minimum size\n    # poolMinConnections: 15\n\n    ### Arbitrary labels to add to each metric scraped from this database\n    ## Any labels configured for one database will be added to metrics from\n    ## every database, because the same metric names must always have the same\n    ## full labelset. If the label isn't set for a particular database, then it\n    ## will just be set to an empty string.\n    # labels:\n    #   label_name1: label_value1\n    #   label_name2: label_value2\n\n  db2:\n    ## Database username\n    username: ${DB2_USERNAME}\n    ## Database password\n    password: ${DB2_PASSWORD}\n    ## Database connection url\n    url: localhost:1522/freepdb1\n\n    ## Metrics query timeout for this database, in seconds\n    queryTimeout: 5\n\n    ## Rely on Oracle Database External Authentication by network or OS\n    # externalAuth: false\n    ## Database role\n    # role: SYSDBA\n    ## Path to Oracle Database wallet, if using wallet\n    # tnsAdmin: /path/to/database/wallet\n\n    ### Connection settings:\n    ### Either the go-sql or Oracle Database connection pool may be used.\n    ### To use the Oracle Database connection pool over the go-sql connection pool,\n    ### set maxIdleConns to zero and configure the pool* settings.\n\n    ### Connection pooling settings for the go-sql connection pool\n    ## Max open connections for this database using go-sql connection pool\n    maxOpenConns: 10\n    ## Max idle connections for this database using go-sql connection pool\n    maxIdleConns: 10\n\n    ### Connection pooling settings for the Oracle Database connection pool\n    ## Oracle Database connection pool increment.\n    # poolIncrement: 1\n    ## Oracle Database Connection pool maximum size\n    # poolMaxConnections: 15\n    ## Oracle Database Connection pool minimum size\n    # poolMinConnections: 15\n\n    ### Arbitrary labels to add to each metric scraped from this database\n    ## Any labels configured for one database will be added to metrics from\n    ## every database, because the same metric names must always have the same\n    ## full labelset. If the label isn't set for a particular database, then it\n    ## will just be set to an empty string.\n    # labels:\n    #   label_name1: label_value1\n    #   label_name2: label_value2\n"})}),"\n",(0,o.jsx)(n.h3,{id:"only-scraping-metrics-from-specific-databases",children:"Only scraping metrics from specific databases"}),"\n",(0,o.jsxs)(n.p,{children:["By default, metrics are scraped from every connected database. To expose only certain metrics on specific databases, configure the ",(0,o.jsx)(n.code,{children:"databases"}),' property of a metric. The following metric definition will only be scraped from databases "db2" and "db3":']}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-toml",children:'[[metric]]\ncontext = "db_platform"\nlabels = [ "platform_name" ]\nmetricsdesc = { value = "Database platform" }\nrequest = \'\'\'\nSELECT platform_name, 1 as value FROM gv$database\n\'\'\'\ndatabases = [ "db2", "db3" ]\n'})}),"\n",(0,o.jsxs)(n.p,{children:["If the ",(0,o.jsx)(n.code,{children:"databases"})," array is empty or not provided for a metric, that metric will be scraped from all connected databases."]})]})}function m(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},8453:(e,n,a)=>{a.d(n,{R:()=>i,x:()=>l});var t=a(6540);const o={},s=t.createContext(o);function i(e){const n=t.useContext(s);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);