"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[9226],{3122:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>p,frontMatter:()=>r,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"configuration/config-file","title":"Exporter Configuration","description":"The recommended way to configure the exporter is with the --config.file argument, specifying a YAML configuration file.","source":"@site/versioned_docs/version-2.1.0/configuration/config-file.md","sourceDirName":"configuration","slug":"/configuration/config-file","permalink":"/oracle-db-appdev-monitoring/docs/configuration/config-file","draft":false,"unlisted":false,"editUrl":"https://github.com/oracle/oracle-db-appdev-monitoring/tree/main/site/versioned_docs/version-2.1.0/configuration/config-file.md","tags":[],"version":"2.1.0","sidebarPosition":1,"frontMatter":{"title":"Exporter Configuration","sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Configuration","permalink":"/oracle-db-appdev-monitoring/docs/category/configuration"},"next":{"title":"Custom Metrics","permalink":"/oracle-db-appdev-monitoring/docs/configuration/custom-metrics"}}');var a=o(4848),i=o(8453);const r={title:"Exporter Configuration",sidebar_position:1},s="Exporter Configuration",c={},l=[{value:"Scrape on request vs. Scrape on interval",id:"scrape-on-request-vs-scrape-on-interval",level:3},{value:"Config file in a container image",id:"config-file-in-a-container-image",level:3}];function d(e){const n={a:"a",code:"code",h1:"h1",h3:"h3",header:"header",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"exporter-configuration",children:"Exporter Configuration"})}),"\n",(0,a.jsxs)(n.p,{children:["The recommended way to configure the exporter is with the ",(0,a.jsx)(n.code,{children:"--config.file"})," argument, specifying a YAML configuration file."]}),"\n",(0,a.jsx)(n.p,{children:"The configuration file contains the following options:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"# Example Oracle Database Metrics Exporter Configuration file.\n# Environment variables of the form ${VAR_NAME} will be expanded.\n# If you include a config value that contains a '$' character, escape that '$' with another '$', e.g.,\n# \"$test$pwd\" => \"$$test$$pwd\"\n# Otherwise, the value will be expanded as an environment variable.\n\n# Example Oracle Database Metrics Exporter Configuration file.\n# Environment variables of the form ${VAR_NAME} will be expanded.\n\ndatabases:\n  ## Path on which metrics will be served\n  # metricsPath: /metrics\n  ## Database connection information for the \"default\" database.\n  default:\n    ## Database username\n    username: ${DB_USERNAME}\n    ## Database password\n    password: ${DB_PASSWORD}\n    ## Database password file\n    ## If specified, will load the database password from a file.\n    # passwordFile: ${DB_PASSWORD_FILE}\n    ## Database connection url\n    url: localhost:1521/freepdb1\n\n    ## Metrics query timeout for this database, in seconds\n    queryTimeout: 5\n\n    ## Rely on Oracle Database External Authentication by network or OS\n    # externalAuth: false\n    ## Database role\n    # role: SYSDBA\n    ## Path to Oracle Database wallet, if using wallet\n    # tnsAdmin: /path/to/database/wallet\n\n    ### Connection settings:\n    ### Either the go-sql or Oracle Database connection pool may be used.\n    ### To use the Oracle Database connection pool over the go-sql connection pool,\n    ### set maxIdleConns to zero and configure the pool* settings.\n\n    ### Connection pooling settings for the go-sql connection pool\n    ## Max open connections for this database using go-sql connection pool\n    maxOpenConns: 10\n    ## Max idle connections for this database using go-sql connection pool\n    maxIdleConns: 10\n\n    ### Connection pooling settings for the Oracle Database connection pool\n    ## Oracle Database connection pool increment.\n    # poolIncrement: 1\n    ## Oracle Database Connection pool maximum size\n    # poolMaxConnections: 15\n    ## Oracle Database Connection pool minimum size\n    # poolMinConnections: 15\n\n    ## Arbitrary labels to add to each metric scraped from this database\n    # labels:\n    #   label_name1: label_value1\n    #   label_name2: label_value2\n\nmetrics:\n  ## How often to scrape metrics. If not provided, metrics will be scraped on request.\n  # scrapeInterval: 15s\n  ## Path to default metrics file.\n  default: default-metrics.toml\n  ## Paths to any custom metrics files\n  custom:\n    - custom-metrics-example/custom-metrics.toml\n\nlog:\n  # Path of log file\n  destination: /opt/alert.log\n  # Interval of log updates\n  interval: 15s\n  ## Set disable to 1 to disable logging\n  # disable: 0\n\n# Optionally configure prometheus webserver\n#web:\n#  listenAddresses: [':9161']\n#  systemdSocket: true|false\n#  configFile: /path/to/webconfigfile\n"})}),"\n",(0,a.jsx)(n.h3,{id:"scrape-on-request-vs-scrape-on-interval",children:"Scrape on request vs. Scrape on interval"}),"\n",(0,a.jsxs)(n.p,{children:["The metrics exporter has two scraping modes: scrape on request, and scrape on interval. By default, the metrics exporter scrapes metrics on request, when the ",(0,a.jsx)(n.code,{children:"/metrics"})," endpoint is invoked."]}),"\n",(0,a.jsxs)(n.p,{children:["To scrape metrics on a given interval, set the ",(0,a.jsx)(n.code,{children:"metrics.scrapeInterval"})," property to a valid interval:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"metrics:\n  # Metrics will be scraped every 30s.\n  scrapeInterval: 30s\n"})}),"\n",(0,a.jsxs)(n.p,{children:["An individual metric may have its own scrape interval separate from the exporter's scrape interval. See the ",(0,a.jsx)(n.a,{href:"/oracle-db-appdev-monitoring/docs/configuration/custom-metrics#metric-schema",children:"metric schema"})," for details on configuring per-metric scrape intervals."]}),"\n",(0,a.jsx)(n.h3,{id:"config-file-in-a-container-image",children:"Config file in a container image"}),"\n",(0,a.jsx)(n.p,{children:"To add your custom config file to a container image, you can layer the base exporter image and include that config:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-Dockerfile",children:'FROM container-registry.oracle.com/database/observability-exporter:2.1.0\nCOPY my-exporter-config.yaml /\nENTRYPOINT ["/oracledb_exporter", "--config.file", "/my-exporter-config.yaml"]\n'})})]})}function p(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},8453:(e,n,o)=>{o.d(n,{R:()=>r,x:()=>s});var t=o(6540);const a={},i=t.createContext(a);function r(e){const n=t.useContext(i);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);