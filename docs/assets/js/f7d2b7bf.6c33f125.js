"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[5173],{8453:(e,t,r)=>{r.d(t,{R:()=>l,x:()=>a});var n=r(6540);const s={},i=n.createContext(s);function l(e){const t=n.useContext(i);return n.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),n.createElement(i.Provider,{value:t},e.children)}},9012:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>m,frontMatter:()=>l,metadata:()=>n,toc:()=>o});const n=JSON.parse('{"id":"configuration/custom-metrics","title":"Custom Metrics","description":"The exporter allows definition of arbitrary custom metrics in one or more TOML or YAML files.","source":"@site/versioned_docs/version-2.0.3/configuration/custom-metrics.md","sourceDirName":"configuration","slug":"/configuration/custom-metrics","permalink":"/oracle-db-appdev-monitoring/docs/2.0.3/configuration/custom-metrics","draft":false,"unlisted":false,"editUrl":"https://github.com/oracle/oracle-db-appdev-monitoring/tree/main/site/versioned_docs/version-2.0.3/configuration/custom-metrics.md","tags":[],"version":"2.0.3","sidebarPosition":2,"frontMatter":{"title":"Custom Metrics","sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"Exporter Config File","permalink":"/oracle-db-appdev-monitoring/docs/2.0.3/configuration/config-file"},"next":{"title":"Multiple Databases","permalink":"/oracle-db-appdev-monitoring/docs/2.0.3/configuration/multiple-databases"}}');var s=r(4848),i=r(8453);const l={title:"Custom Metrics",sidebar_position:2},a="Custom Metrics",c={},o=[{value:"Metric Schema",id:"metric-schema",level:3},{value:"Example Metric Definition",id:"example-metric-definition",level:3},{value:"Customize metrics in a container image",id:"customize-metrics-in-a-container-image",level:3}];function d(e){const t={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h3:"h3",header:"header",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"custom-metrics",children:"Custom Metrics"})}),"\n",(0,s.jsx)(t.p,{children:"The exporter allows definition of arbitrary custom metrics in one or more TOML or YAML files."}),"\n",(0,s.jsxs)(t.p,{children:["To specify custom metrics files\nexporter, use the ",(0,s.jsx)(t.code,{children:"metrics"})," configuration in the ",(0,s.jsx)(t.a,{href:"/oracle-db-appdev-monitoring/docs/2.0.3/configuration/config-file",children:"config file"}),":"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-yaml",children:"metrics:\n  ## How often to scrape metrics. If not provided, metrics will be scraped on request.\n  # scrapeInterval: 15s\n  ## Path to default metrics file.\n  default: default-metrics.toml\n  ## Paths to any custom metrics files (TOML or YAML)\n  custom:\n    - custom-metrics-example/custom-metrics.toml\n"})}),"\n",(0,s.jsxs)(t.p,{children:["You may also use ",(0,s.jsx)(t.code,{children:"--custom.metrics"})," flag followed by a comma separated list of TOML or YAML files, or export ",(0,s.jsx)(t.code,{children:"CUSTOM_METRICS"})," variable environment (",(0,s.jsx)(t.code,{children:"export CUSTOM_METRICS=my-custom-metrics.toml,my-other-custom-metrics.toml"}),")"]}),"\n",(0,s.jsx)(t.h3,{id:"metric-schema",children:"Metric Schema"}),"\n",(0,s.jsxs)(t.p,{children:["Metrics files must contain a series of ",(0,s.jsx)(t.code,{children:"[[metric]]"})," definitions, in TOML, or the equivalent definition in a YAML file. Each metric definition must follow the exporter's metric schema:"]}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Field Name"}),(0,s.jsx)(t.th,{children:"Description"}),(0,s.jsx)(t.th,{children:"Type"}),(0,s.jsx)(t.th,{children:"Required"}),(0,s.jsx)(t.th,{children:"Default"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"context"}),(0,s.jsx)(t.td,{children:"Metric context, used to build metric FQN"}),(0,s.jsx)(t.td,{children:"String"}),(0,s.jsx)(t.td,{children:"Yes"}),(0,s.jsx)(t.td,{})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"labels"}),(0,s.jsx)(t.td,{children:"Metric labels, which must match column names in the query. Any column that is not a label will be parsed as a metric"}),(0,s.jsx)(t.td,{children:"Array of Strings"}),(0,s.jsx)(t.td,{children:"No"}),(0,s.jsx)(t.td,{})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"metricsdesc"}),(0,s.jsx)(t.td,{children:"Mapping between field(s) in the request and comment(s)"}),(0,s.jsx)(t.td,{children:"Dictionary of Strings"}),(0,s.jsx)(t.td,{children:"Yes"}),(0,s.jsx)(t.td,{})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"metricstype"}),(0,s.jsxs)(t.td,{children:["Mapping between field(s) in the request and ",(0,s.jsx)(t.a,{href:"https://prometheus.io/docs/concepts/metric_types/",children:"Prometheus metric types"})]}),(0,s.jsx)(t.td,{children:"Dictionary of Strings"}),(0,s.jsx)(t.td,{children:"No"}),(0,s.jsx)(t.td,{})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"metricsbuckets"}),(0,s.jsxs)(t.td,{children:["Split ",(0,s.jsx)(t.a,{href:"https://prometheus.io/docs/concepts/metric_types/#histogram",children:"histogram"})," metric types into buckets based on value (",(0,s.jsx)(t.a,{href:"https://github.com/oracle/oracle-db-appdev-monitoring/blob/main/custom-metrics-example/metric-histogram-example.toml",children:"example"}),")"]}),(0,s.jsx)(t.td,{children:"Dictionary of String dictionaries"}),(0,s.jsx)(t.td,{children:"No"}),(0,s.jsx)(t.td,{})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"fieldtoappend"}),(0,s.jsx)(t.td,{children:"Field from the request to append to the metric FQN"}),(0,s.jsx)(t.td,{children:"String"}),(0,s.jsx)(t.td,{children:"No"}),(0,s.jsx)(t.td,{})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"request"}),(0,s.jsx)(t.td,{children:"Oracle database query to run for metrics scraping"}),(0,s.jsx)(t.td,{children:"String"}),(0,s.jsx)(t.td,{children:"Yes"}),(0,s.jsx)(t.td,{})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"ignorezeroresult"}),(0,s.jsx)(t.td,{children:"Whether or not an error will be printed if the request does not return any results"}),(0,s.jsx)(t.td,{children:"Boolean"}),(0,s.jsx)(t.td,{children:"No"}),(0,s.jsx)(t.td,{children:"false"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"querytimeout"}),(0,s.jsx)(t.td,{children:"Oracle Database query timeout duration, e.g., 300ms, 0.5h"}),(0,s.jsx)(t.td,{children:"String duration"}),(0,s.jsx)(t.td,{children:"No"}),(0,s.jsx)(t.td,{children:"Value of query.timeout in seconds"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"scrapeinterval"}),(0,s.jsx)(t.td,{children:"Custom metric scrape interval, used if scrape.interval is provided, otherwise metrics are always scraped on request."}),(0,s.jsx)(t.td,{children:"String duration"}),(0,s.jsx)(t.td,{children:"No"}),(0,s.jsx)(t.td,{})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"databases"}),(0,s.jsx)(t.td,{children:"Optional array of databases to scrape from. If not specified, the metric is scraped from all databases."}),(0,s.jsx)(t.td,{children:"Array of Strings"}),(0,s.jsx)(t.td,{children:"No"}),(0,s.jsx)(t.td,{})]})]})]}),"\n",(0,s.jsx)(t.h3,{id:"example-metric-definition",children:"Example Metric Definition"}),"\n",(0,s.jsx)(t.p,{children:"Here's a simple example of a metric definition:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-toml",children:'[[metric]]\ncontext = "test"\nrequest = "SELECT 1 as value_1, 2 as value_2 FROM DUAL"\nmetricsdesc = { value_1 = "Simple example returning always 1.", value_2 = "Same but returning always 2." }\n'})}),"\n",(0,s.jsxs)(t.blockquote,{children:["\n",(0,s.jsxs)(t.p,{children:["NOTE: Do not add a semicolon (",(0,s.jsx)(t.code,{children:";"}),") at the end of the SQL queries."]}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:"This file produce the following entries in the exporter:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-text",children:"# HELP oracledb_test_value_1 Simple example returning always 1.\n# TYPE oracledb_test_value_1 gauge\noracledb_test_value_1 1\n# HELP oracledb_test_value_2 Same but returning always 2.\n# TYPE oracledb_test_value_2 gauge\noracledb_test_value_2 2\n"})}),"\n",(0,s.jsxs)(t.p,{children:["You can also provide labels using ",(0,s.jsx)(t.code,{children:"labels"})," field. Here's an example providing two metrics, with and without labels:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-toml",children:'[[metric]]\ncontext = "context_no_label"\nrequest = "SELECT 1 as value_1, 2 as value_2 FROM DUAL"\nmetricsdesc = { value_1 = "Simple example returning always 1.", value_2 = "Same but returning always 2." }\n\n[[metric]]\ncontext = "context_with_labels"\nlabels = [ "label_1", "label_2" ]\nrequest = "SELECT 1 as value_1, 2 as value_2, \'First label\' as label_1, \'Second label\' as label_2 FROM DUAL"\nmetricsdesc = { value_1 = "Simple example returning always 1.", value_2 = "Same but returning always 2." }\n'})}),"\n",(0,s.jsx)(t.p,{children:"This TOML file produces the following result:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-text",children:'# HELP oracledb_context_no_label_value_1 Simple example returning always 1.\n# TYPE oracledb_context_no_label_value_1 gauge\noracledb_context_no_label_value_1 1\n# HELP oracledb_context_no_label_value_2 Same but returning always 2.\n# TYPE oracledb_context_no_label_value_2 gauge\noracledb_context_no_label_value_2 2\n# HELP oracledb_context_with_labels_value_1 Simple example returning always 1.\n# TYPE oracledb_context_with_labels_value_1 gauge\noracledb_context_with_labels_value_1{label_1="First label",label_2="Second label"} 1\n# HELP oracledb_context_with_labels_value_2 Same but returning always 2.\n# TYPE oracledb_context_with_labels_value_2 gauge\noracledb_context_with_labels_value_2{label_1="First label",label_2="Second label"} 2\n'})}),"\n",(0,s.jsxs)(t.p,{children:["Last, you can set metric type using ",(0,s.jsx)(t.strong,{children:"metricstype"})," field."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-toml",children:'[[metric]]\ncontext = "context_with_labels"\nlabels = [ "label_1", "label_2" ]\nrequest = "SELECT 1 as value_1, 2 as value_2, \'First label\' as label_1, \'Second label\' as label_2 FROM DUAL"\nmetricsdesc = { value_1 = "Simple example returning always 1 as counter.", value_2 = "Same but returning always 2 as gauge." }\n# Can be counter or gauge (default)\nmetricstype = { value_1 = "counter" }\n'})}),"\n",(0,s.jsx)(t.p,{children:"This TOML file will produce the following result:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-text",children:"# HELP oracledb_test_value_1 Simple test example returning always 1 as counter.\n# TYPE oracledb_test_value_1 counter\noracledb_test_value_1 1\n# HELP oracledb_test_value_2 Same test but returning always 2 as gauge.\n# TYPE oracledb_test_value_2 gauge\noracledb_test_value_2 2\n"})}),"\n",(0,s.jsxs)(t.p,{children:["You can find ",(0,s.jsx)(t.a,{href:"https://github.com/oracle/oracle-db-appdev-monitoring/blob/main/custom-metrics-example/custom-metrics.toml",children:"working examples"})," of custom metrics for slow queries, big queries and top 100 tables.\nAn example of ",(0,s.jsx)(t.a,{href:"https://github.com/oracle/oracle-db-appdev-monitoring/blob/main/custom-metrics-example/txeventq-metrics.toml",children:"custom metrics for Transacational Event Queues"})," is also provided."]}),"\n",(0,s.jsx)(t.h3,{id:"customize-metrics-in-a-container-image",children:"Customize metrics in a container image"}),"\n",(0,s.jsxs)(t.p,{children:["If you run the exporter as a container image and want to include your custom metrics in the image itself, you can use the following example ",(0,s.jsx)(t.code,{children:"Dockerfile"})," to create a new image:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-Dockerfile",children:'FROM container-registry.oracle.com/database/observability-exporter:2.0.3\nCOPY custom-metrics.toml /\nENTRYPOINT ["/oracledb_exporter", "--custom.metrics", "/custom-metrics.toml"]\n'})})]})}function m(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}}}]);