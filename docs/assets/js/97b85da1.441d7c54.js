"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[3456],{6932:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>h,frontMatter:()=>i,metadata:()=>o,toc:()=>c});const o=JSON.parse('{"id":"getting-started/basics","title":"Installation","description":"In this section you will find information on running the exporter.","source":"@site/versioned_docs/version-2.2.0/getting-started/basics.md","sourceDirName":"getting-started","slug":"/getting-started/basics","permalink":"/oracle-db-appdev-monitoring/docs/getting-started/basics","draft":false,"unlisted":false,"editUrl":"https://github.com/oracle/oracle-db-appdev-monitoring/tree/main/site/versioned_docs/version-2.2.0/getting-started/basics.md","tags":[],"version":"2.2.0","sidebarPosition":1,"frontMatter":{"title":"Installation","sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Getting Started","permalink":"/oracle-db-appdev-monitoring/docs/category/getting-started"},"next":{"title":"Default Metrics","permalink":"/oracle-db-appdev-monitoring/docs/getting-started/default-metrics"}}');var a=t(4848),s=t(8453);const i={title:"Installation",sidebar_position:1},r="Installation",l={},c=[{value:"Database Permissions",id:"database-permissions",level:2},{value:"Docker, Podman, etc",id:"docker-podman-etc",level:2},{value:"Oracle Database Free",id:"oracle-database-free",level:3},{value:"Exporter",id:"exporter",level:3},{value:"Simple connection",id:"simple-connection",level:3},{value:"Standalone Binary",id:"standalone-binary",level:2},{value:"Docker Compose",id:"docker-compose",level:3}];function d(e){const n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"installation",children:"Installation"})}),"\n",(0,a.jsx)(n.p,{children:"In this section you will find information on running the exporter."}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["In a container runtime like ",(0,a.jsx)(n.a,{href:"#docker-podman-etc",children:"Docker, Podman, etc"})]}),"\n",(0,a.jsxs)(n.li,{children:["In a test/demo environment using ",(0,a.jsx)(n.a,{href:"#docker-compose",children:"Docker Compose"})]}),"\n",(0,a.jsxs)(n.li,{children:["In ",(0,a.jsx)(n.a,{href:"/oracle-db-appdev-monitoring/docs/getting-started/kubernetes",children:"Kubernetes"})]}),"\n",(0,a.jsxs)(n.li,{children:["As a ",(0,a.jsx)(n.a,{href:"#standalone-binary",children:"standalone binary"})]}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"database-permissions",children:"Database Permissions"}),"\n",(0,a.jsxs)(n.p,{children:["For the built-in default metrics, the exporter database database user must have the ",(0,a.jsx)(n.code,{children:"SELECT_CATALOG_ROLE"})," privilege and/or ",(0,a.jsx)(n.code,{children:"SELECT"})," permission on the following objects:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"dba_tablespace_usage_metrics\ndba_tablespaces\ngv$system_wait_class\ngv$asm_diskgroup_stat\ngv$datafile\ngv$sysstat\ngv$process\ngv$waitclassmetric\ngv$session\ngv$resource_limit\ngv$parameter\ngv$database\ngv$sqlstats\ngv$sysmetric\nv$diag_alert_ext (for alert logs only)\n"})}),"\n",(0,a.jsx)(n.h2,{id:"docker-podman-etc",children:"Docker, Podman, etc"}),"\n",(0,a.jsxs)(n.p,{children:["You can run the exporter in a local container using a container image from ",(0,a.jsx)(n.a,{href:"https://container-registry.oracle.com",children:"Oracle Container Registry"}),'.  The container image is available in the "observability-exporter" repository in the "Database" category.  No authentication or license presentment/acceptance are required to pull this image from the registry.']}),"\n",(0,a.jsx)(n.h3,{id:"oracle-database-free",children:"Oracle Database Free"}),"\n",(0,a.jsxs)(n.p,{children:["If you need an Oracle Database to test the exporter, you can use this command to start up an instance of ",(0,a.jsx)(n.a,{href:"https://www.oracle.com/database/free/",children:"Oracle Database Free"})," which also requires no authentication or license presentment/acceptance to pull the image."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"docker run --name free23ai \\\n    -d \\\n    -p 1521:1521 \\\n    -e ORACLE_PASSWORD=Welcome12345 \\\n    gvenzl/oracle-free:23.9-slim-faststart\n"})}),"\n",(0,a.jsx)(n.p,{children:'This will pull the image and start up the database with a listener on port 1521. It will also create a pluggable database (a database container) called "FREEPDB1" and will set the admin passwords to the password you specified on this command.'}),"\n",(0,a.jsx)(n.p,{children:"You can tail the logs to see when the database is ready to use:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"docker logs -f free23ai\n\n(look for this message...)\n#########################\nDATABASE IS READY TO USE!\n#########################\n"})}),"\n",(0,a.jsx)(n.p,{children:'To obtain the IP address of the container, which you will need to connect to the database, use this command.  Note: depending on your platform and container runtime, you may be able to access the database at "localhost":'}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'docker inspect free23ai | grep IPA\n    "SecondaryIPAddresses": null,\n    "IPAddress": "172.17.0.2",\n            "IPAMConfig": null,\n            "IPAddress": "172.17.0.2",\n'})}),"\n",(0,a.jsx)(n.h3,{id:"exporter",children:"Exporter"}),"\n",(0,a.jsx)(n.p,{children:"You need to give the exporter the connection details for the Oracle Database that you want it to run against.  You can use a simple connection, or a wallet."}),"\n",(0,a.jsx)(n.h3,{id:"simple-connection",children:"Simple connection"}),"\n",(0,a.jsx)(n.p,{children:"For a simple connection, you will provide the details using these variables:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"DB_USERNAME"})," is the database username, e.g., ",(0,a.jsx)(n.code,{children:"pdbadmin"})]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"DB_PASSWORD"})," is the password for that user, e.g., ",(0,a.jsx)(n.code,{children:"Welcome12345"})]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"DB_CONNECT_STRING"})," is the connection string, e.g., ",(0,a.jsx)(n.code,{children:"free23ai:1521/freepdb"})]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"DB_ROLE"})," (Optional) can be set to ",(0,a.jsx)(n.code,{children:"SYSDBA"}),", ",(0,a.jsx)(n.code,{children:"SYSOPER"}),", ",(0,a.jsx)(n.code,{children:"SYSBACKUP"}),", ",(0,a.jsx)(n.code,{children:"SYSDG"}),", ",(0,a.jsx)(n.code,{children:"SYSKM"}),", ",(0,a.jsx)(n.code,{children:"SYSRAC"})," or ",(0,a.jsx)(n.code,{children:"SYSASM"})," if you want to connect with one of those roles, however Oracle recommends that you connect with the lowest possible privileges and roles necessary for the exporter to run."]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"To run the exporter in a container and expose the port, use a command like this, with the appropriate values for the environment variables:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"docker run -it --rm \\\n    -e DB_USERNAME=pdbadmin \\\n    -e DB_PASSWORD=Welcome12345 \\\n    -e DB_CONNECT_STRING=free23ai:1521/freepdb \\\n    -p 9161:9161 \\\n    container-registry.oracle.com/database/observability-exporter:2.2.0\n"})}),"\n",(0,a.jsx)(n.h2,{id:"standalone-binary",children:"Standalone Binary"}),"\n",(0,a.jsxs)(n.p,{children:["Pre-compiled versions for Linux, ARM and Darwin 64-bit can be found under ",(0,a.jsx)(n.a,{href:"https://github.com/oracle/oracle-db-appdev-monitoring/releases",children:"releases"}),"."]}),"\n",(0,a.jsxs)(n.p,{children:["In order to run, you'll need the ",(0,a.jsx)(n.a,{href:"http://www.oracle.com/technetwork/database/features/instant-client/index-097480.html",children:"Oracle Instant Client Basic"})," for your operating system. Only the basic version is required for the exporter."]}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:["NOTE: If you are running the Standalone binary on a Mac ARM platform you must set the variable ",(0,a.jsx)(n.code,{children:"DYLD_LIBRARY_PATH"})," to the location of where the instant client installed. For example ",(0,a.jsx)(n.code,{children:"export DYLD_LIBRARY_PATH=/lib/oracle/instantclient_23_3"}),"."]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"The following command line arguments (flags) can be passed to the exporter (the --help flag will show the table below)."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'Usage of oracledb_exporter:\n      --config.file="example-config.yaml"\n                                 File with metrics exporter configuration.  (env: CONFIG_FILE)\n      --web.telemetry-path="/metrics"\n                                 Path under which to expose metrics. (env: TELEMETRY_PATH)\n      --default.metrics="default-metrics.toml"\n                                 File with default metrics in a TOML file. (env: DEFAULT_METRICS)\n      --custom.metrics=""        Comma separated list of file(s) that contain various custom metrics in a TOML format. (env: CUSTOM_METRICS)\n      --query.timeout=5          Query timeout (in seconds). (env: QUERY_TIMEOUT)\n      --database.maxIdleConns=0  Number of maximum idle connections in the connection pool. (env: DATABASE_MAXIDLECONNS)\n      --database.maxOpenConns=10\n                                 Number of maximum open connections in the connection pool. (env: DATABASE_MAXOPENCONNS)\n      --database.poolIncrement=-1\n                                 Connection increment when the connection pool reaches max capacity. (env: DATABASE_POOLINCREMENT)\n      --database.poolMaxConnections=-1\n                                 Maximum number of connections in the connection pool. (env: DATABASE_POOLMAXCONNECTIONS)\n      --database.poolMinConnections=-1\n                                 Minimum number of connections in the connection pool. (env: DATABASE_POOLMINCONNECTIONS)\n      --scrape.interval=0s       Interval between each scrape. Default is to scrape on collect requests.\n      --log.disable=0            Set to 1 to disable alert logs\n      --log.interval=15s         Interval between log updates (e.g. 5s).\n      --log.destination="/log/alert.log"\n                                 File to output the alert log to. (env: LOG_DESTINATION)\n      --web.listen-address=:9161 ...\n                                 Addresses on which to expose metrics and web interface. Repeatable for multiple addresses. Examples: `:9100` or `[::1]:9100` for http, `vsock://:9100` for vsock\n      --web.config.file=""       Path to configuration file that can enable TLS or authentication. See: https://github.com/prometheus/exporter-toolkit/blob/master/docs/web-configuration.md\n      --log.level=info           Only log messages with the given severity or above. One of: [debug, info, warn, error]\n      --log.format=logfmt        Output format of log messages. One of: [logfmt, json]\n      --[no-]version             Show application version.\n'})}),"\n",(0,a.jsx)(n.p,{children:"You may provide the connection details using these variables:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"DB_USERNAME"})," is the database username, e.g., ",(0,a.jsx)(n.code,{children:"pdbadmin"})]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"DB_PASSWORD"})," is the password for that user, e.g., ",(0,a.jsx)(n.code,{children:"Welcome12345"})]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"DB_CONNECT_STRING"})," is the connection string, e.g., ",(0,a.jsx)(n.code,{children:"localhost:1521/freepdb1"})]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"DB_ROLE"})," (Optional) can be set to ",(0,a.jsx)(n.code,{children:"SYSDBA"})," or ",(0,a.jsx)(n.code,{children:"SYSOPER"})," if you want to connect with one of those roles, however Oracle recommends that you connect with the lowest possible privileges and roles necessary for the exporter to run."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"ORACLE_HOME"})," is the location of the Oracle Instant Client, e.g., ",(0,a.jsx)(n.code,{children:"/lib/oracle/21/client64/lib"}),"."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"TNS_ADMIN"})," is the location of your (unzipped) wallet.  The ",(0,a.jsx)(n.code,{children:"DIRECTORY"})," set in the ",(0,a.jsx)(n.code,{children:"sqlnet.ora"})," file must match the path that it will be mounted on inside the container."]}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:["The following example puts the logfile in the current location with the filename ",(0,a.jsx)(n.code,{children:"alert.log"})," and loads the default matrics file (",(0,a.jsx)(n.code,{children:"default-metrics,toml"}),") from the current location."]}),"\n",(0,a.jsxs)(n.p,{children:["If you prefer to provide configuration via a ",(0,a.jsx)(n.a,{href:"/oracle-db-appdev-monitoring/docs/configuration/config-file",children:"config file"}),", you may do so with the ",(0,a.jsx)(n.code,{children:"--config.file"}),' argument. The use of a config file over command line arguments is preferred. If a config file is not provided, the "default" database connection is managed by command line arguments.']}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"# Example Oracle Database Metrics Exporter Configuration file.\n# Environment variables of the form ${VAR_NAME} will be expanded.\n# If you include a config value that contains a '$' character, escape that '$' with another '$', e.g.,\n# \"$test$pwd\" => \"$$test$$pwd\"\n# Otherwise, the value will be expanded as an environment variable.\n\n# Example Oracle Database Metrics Exporter Configuration file.\n# Environment variables of the form ${VAR_NAME} will be expanded.\n\ndatabases:\n  ## Path on which metrics will be served\n  # metricsPath: /metrics\n  ## Database connection information for the \"default\" database.\n  default:\n    ## Database username\n    username: ${DB_USERNAME}\n    ## Database password\n    password: ${DB_PASSWORD}\n    ## Database password file\n    ## If specified, will load the database password from a file.\n    # passwordFile: ${DB_PASSWORD_FILE}\n    ## Database connection url\n    url: localhost:1521/freepdb1\n\n    ## Metrics query timeout for this database, in seconds\n    queryTimeout: 5\n\n    ## Rely on Oracle Database External Authentication by network or OS\n    # externalAuth: false\n    ## Database role\n    # role: SYSDBA\n    ## Path to Oracle Database wallet, if using wallet\n    # tnsAdmin: /path/to/database/wallet\n\n    ### Connection settings:\n    ### Either the go-sql or Oracle Database connection pool may be used.\n    ### To use the Oracle Database connection pool over the go-sql connection pool,\n    ### set maxIdleConns to zero and configure the pool* settings.\n\n    ### Connection pooling settings for the go-sql connection pool\n    ## Max open connections for this database using go-sql connection pool\n    maxOpenConns: 10\n    ## Max idle connections for this database using go-sql connection pool\n    maxIdleConns: 10\n\n    ### Connection pooling settings for the Oracle Database connection pool\n    ## Oracle Database connection pool increment.\n    # poolIncrement: 1\n    ## Oracle Database Connection pool maximum size\n    # poolMaxConnections: 15\n    ## Oracle Database Connection pool minimum size\n    # poolMinConnections: 15\n\n    ## Arbitrary labels to add to each metric scraped from this database\n    # labels:\n    #   label_name1: label_value1\n    #   label_name2: label_value2\n\nmetrics:\n  ## How often to scrape metrics. If not provided, metrics will be scraped on request.\n  # scrapeInterval: 15s\n  ## Path to default metrics file.\n  default: default-metrics.toml\n  ## Paths to any custom metrics files\n  custom:\n    - custom-metrics-example/custom-metrics.toml\n\nlog:\n  # Path of log file\n  destination: /opt/alert.log\n  # Interval of log updates\n  interval: 15s\n  ## Set disable to 1 to disable logging\n  # disable: 0\n\n# Optionally configure prometheus webserver\n#web:\n#  listenAddresses: [':9161']\n#  systemdSocket: true|false\n#  configFile: /path/to/webconfigfile\n"})}),"\n",(0,a.jsx)(n.h3,{id:"docker-compose",children:"Docker Compose"}),"\n",(0,a.jsx)(n.p,{children:'If you would like to set up a test environment with the exporter, you can use the provided "Docker Compose" file in this repository which will start an Oracle Database instance, the exporter, Prometheus and Grafana.'}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"cd docker-compose\ndocker-compose up -d\n"})}),"\n",(0,a.jsx)(n.p,{children:"The containers will take a short time to start.  The first time, the Oracle container might take a few minutes to start while it creates the database instance, but this is a one-time operation, and subequent restarts will be much faster (a few seconds)."}),"\n",(0,a.jsx)(n.p,{children:"Once the containers are all running, you can access the services using these URLs:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"http://localhost:9161/metrics",children:"Exporter"})}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.a,{href:"http://localhost:9090",children:"Prometheus"}),' - try a query for "oracle".']}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.a,{href:"http://localhost:3000",children:"Grafana"}),' - username is "admin" and password is "grafana".  An Oracle Database dashboard is provisioned and configured to use data from the exporter.']}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>r});var o=t(6540);const a={},s=o.createContext(a);function i(e){const n=o.useContext(s);return o.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),o.createElement(s.Provider,{value:n},e.children)}}}]);