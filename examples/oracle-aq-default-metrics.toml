
[[metric]]
context = "teq"
labels = ["inst_id", "queue_name", "subscriber_name"]
metricsdesc = { enqueued_msgs = "Total enqueued messages.", dequeued_msgs = "Total dequeued messages.", remained_msgs = "Total remained messages.", time_since_last_dequeue = "Time since last dequeue.", estd_time_to_drain_no_enq = "Estimated time to drain if no enqueue.", message_latency_1 = "Message latency for last 5 mins.", message_latency_2 = "Message latency for last 1 hour.", message_latency_3 = "Message latency for last 5 hours."}
request = '''
SELECT DISTINCT
    t1.inst_id,
    t1.queue_id,
    t2.queue_name,
    t1.subscriber_id AS subscriber_name,
    t1.enqueued_msgs,
    t1.dequeued_msgs,
    t1.remained_msgs,
    t1.message_latency_1,
    t1.message_latency_2,
    t1.message_latency_3
FROM
    (
        SELECT
            inst_id,
            queue_id,
            subscriber_id,
            SUM(enqueued_msgs) AS enqueued_msgs,
            SUM(dequeued_msgs) AS dequeued_msgs,
            SUM(enqueued_msgs - dequeued_msgs) AS remained_msgs,
            AVG(10) AS message_latency_1,
            AVG(20) AS message_latency_2,
            AVG(30) AS message_latency_3
        FROM
            gv$persistent_subscribers
        GROUP BY
            queue_id,
            subscriber_id,
            inst_id
    ) t1
    JOIN gv$persistent_queues t2 ON t1.queue_id = t2.queue_id
'''
